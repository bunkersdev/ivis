USE ${DATABASE};


INSERT OVERWRITE TABLE STG_INV_VISIBILITY partition(INVENTORY_TYP='INTERCO',YEAR=${YEAR},period=${PERIOD})
SELECT MATERIAL_ID,
       MATERIAL_DESC,
       MATERIAL_TYP,
       PRIMARY_PLANT_ID,
       PRIMARY_COMPANY_CODE,
       SUPPLY_PLANT_ID AS SUPPL_PLANT,
       SUPPLY_COMPANY_CDE AS SUPPLY_COMPANY_CDE,
       WAREHOUSE,
       JDA_D56_ITEM_NO,
       SAP_D56_ITEM_NO,
       PRIMARY_AFFILIATE_CODE,
       STD_COST,
       BASE_UOM,
       SUM(AMT_LOCAL_CURR),
       CURRENCY,
       SUM(TOTAL_STOCK_QTY),
	   COST_OVERRIDE_FLG,
       CURRENT_DATE AS INSERT_DT,
                       '${USER_NAME}' AS CREATED_BY
FROM
  (SELECT STG_INTRANS.MATERIAL_ID,
          STG_INTRANS.MATERIAL_DESC,
          STG_INTRANS.MATERIAL_TYP,
          PRIM_PLANT.PRIMARY_PLANT_ID,
          PRIM_PLANT.PRIMARY_COMPANY_CODE,
          STG_INTRANS.SUPPLY_PLANT_ID,
          STG_INTRANS.SUPPLY_COMPANY_CDE,
          STG_COMPANY.WAREHOUSE,
          NVL(SPEC_ITEM.D56_ITEM_NO, NONSPEC_ITEM.D56_ITEM_NO) AS JDA_D56_ITEM_NO,
          STG_INTRANS.SAP_D56_ITEM_NO,
          PRIM_PLANT.PRIMARY_AFFILIATE_CODE,
          NVL(MAT_COST.STD_COST, PRIM_PLNT_COST.STD_COST) AS STD_COST,
          NVL(MAT_COST.BASE_UOM, PRIM_PLNT_COST.BASE_UOM) AS BASE_UOM,
		  CASE WHEN (MAT_COST.STD_COST IS NOT NULL) 
			THEN 'N' 
			ELSE 'Y' 
			END AS COST_OVERRIDE_FLG,
          STG_INTRANS.AMT_LOCAL_CURR AS AMT_LOCAL_CURR,
          STG_COMPANY.CURRENCY,
          STG_INTRANS.TOTAL_STOCK_QTY AS TOTAL_STOCK_QTY
   FROM STG_INV_INTER_INTRANSIT STG_INTRANS
   LEFT OUTER JOIN
     (SELECT DISTINCT AFF_CDE.AFFILIATE_CODE,
                      prim_plant.plant AS primary_plant_id,
                      prim_plant.affiliate_code AS primary_affiliate_code,
                      prim_plant.company_code AS primary_company_code
      FROM stg_primary_plant_lookup aff_cde
      JOIN stg_primary_plant_lookup prim_plant
      WHERE aff_cde.GROUP_NUM= prim_plant.GROUP_NUM
        AND UPPER(prim_plant.primary_ind)=UPPER('x')) prim_plant ON STG_INTRANS.jda_aff_cde = prim_plant.affiliate_code
   LEFT OUTER JOIN
     (SELECT D56_ITEM_NO,
             ITEM_CODE,
             LOC AS AFFILIATE
      FROM STG_ITEM
      WHERE ITEM_CODE <> 'NONSPCFC') AS SPEC_ITEM ON STG_INTRANS.MATERIAL_ID = SPEC_ITEM.ITEM_CODE
   AND PRIM_PLANT.PRIMARY_AFFILIATE_CODE=SPEC_ITEM.AFFILIATE
   LEFT OUTER JOIN
     (SELECT D56_ITEM_NO,
             LOC AS AFFILIATE
      FROM STG_ITEM
      WHERE ITEM_CODE = 'NONSPCFC') AS NONSPEC_ITEM ON PRIM_PLANT.PRIMARY_AFFILIATE_CODE=NONSPEC_ITEM.AFFILIATE
   LEFT OUTER JOIN STG_SAP_PLANT_COMPANY_MASTER STG_COMPANY ON PRIM_PLANT.PRIMARY_PLANT_ID = STG_COMPANY.PLANT_ID
   LEFT OUTER JOIN
     (SELECT MATERIAL,
             PRIMARY_PLANT,
             STD_COST,
             BASE_UOM,
             YEAR,
             PERIOD
      FROM TMP_MATERIAL_COST
      WHERE PLANT=PRIMARY_PLANT) AS MAT_COST ON STG_INTRANS.MATERIAL_ID= MAT_COST.MATERIAL
   AND PRIM_PLANT.PRIMARY_PLANT_ID=MAT_COST.PRIMARY_PLANT
   AND STG_INTRANS.YEAR= MAT_COST.YEAR
   AND STG_INTRANS.PERIOD= MAT_COST.PERIOD
      LEFT OUTER JOIN
     (SELECT MATERIAL,
             PRIMARY_PLANT,
             STD_COST,
             BASE_UOM,
             YEAR,
             PERIOD
      FROM TMP_MAT_PRIM_PLANT_COST) AS PRIM_PLNT_COST ON STG_INTRANS.MATERIAL_ID= PRIM_PLNT_COST.MATERIAL
   AND PRIM_PLANT.PRIMARY_PLANT_ID=PRIM_PLNT_COST.PRIMARY_PLANT
   AND STG_INTRANS.YEAR= PRIM_PLNT_COST.YEAR
   AND STG_INTRANS.PERIOD= PRIM_PLNT_COST.PERIOD
   WHERE STG_INTRANS.YEAR=${YEAR}
     AND STG_INTRANS.PERIOD=${PERIOD}
     AND PRIM_PLANT.PRIMARY_PLANT_ID IS NOT NULL) INTRANSIT
GROUP BY MATERIAL_ID,
         MATERIAL_DESC,
         MATERIAL_TYP,
         PRIMARY_PLANT_ID,
         PRIMARY_COMPANY_CODE,
         SUPPLY_PLANT_ID ,
         SUPPLY_COMPANY_CDE ,
         WAREHOUSE,
         JDA_D56_ITEM_NO,
         SAP_D56_ITEM_NO,
         PRIMARY_AFFILIATE_CODE,
         STD_COST,
         BASE_UOM,
         CURRENCY,
		 COST_OVERRIDE_FLG;